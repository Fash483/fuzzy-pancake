version: 1.0.{build}
image: Ubuntu

install:
  - sudo apt install -y python3 python3-pip
  - pip install requests
  - mkdir -p downloads

build_script:
  - echo "Creating test file: Invader ZIM - S00E07 - The Music of Zim (1080p x265 EDGE2020).txt"
  - echo "This is Zim content." > "downloads/Invader ZIM - S00E07 - The Music of Zim (1080p x265 EDGE2020).txt"
  - echo "Creating test file: Sjsjsnn [EZTVX.TO].txt"
  - echo "This is Sjsjsnn." > "downloads/Sjsjsnn [EZTVX.TO].txt"
  - echo "Creating subfolder and test file: NestedFile.txt"
  - mkdir -p "downloads/subfolder"
  - echo "Nested content." > "downloads/subfolder/NestedFile.txt"

  - echo "Writing upload script..."
  - echo "import os" > filebin_upload.py
  - echo "import requests" >> filebin_upload.py
  - echo "import concurrent.futures" >> filebin_upload.py
  - echo "" >> filebin_upload.py
  - echo "directory = 'downloads'" >> filebin_upload.py
  - echo "url_template = 'https://filebin.net/dbxf5lr7md9xpcjg/{filename}'" >> filebin_upload.py
  - echo "" >> filebin_upload.py
  - echo "def upload_file(file_path):" >> filebin_upload.py
  - echo "    filename = os.path.relpath(file_path, directory)" >> filebin_upload.py
  - echo "    filename = filename.replace(os.sep, '_')" >> filebin_upload.py
  - echo "    url = url_template.format(filename=filename)" >> filebin_upload.py
  - echo "" >> filebin_upload.py
  - echo "    with open(file_path, 'rb') as f:" >> filebin_upload.py
  - echo "        response = requests.post(" >> filebin_upload.py
  - echo "            url," >> filebin_upload.py
  - echo "            headers={" >> filebin_upload.py
  - echo "                'accept': 'application/json'," >> filebin_upload.py
  - echo "                'Content-Type': 'application/octet-stream'" >> filebin_upload.py
  - echo "            }," >> filebin_upload.py
  - echo "            data=f" >> filebin_upload.py
  - echo "        )" >> filebin_upload.py
  - echo "    return response.status_code, filename, response.text" >> filebin_upload.py
  - echo "" >> filebin_upload.py
  - echo "# Recursively gather all files in directory and subdirectories" >> filebin_upload.py
  - echo "files_to_upload = []" >> filebin_upload.py
  - echo "for root, dirs, files in os.walk(directory):" >> filebin_upload.py
  - echo "    for file in files:" >> filebin_upload.py
  - echo "        file_path = os.path.join(root, file)" >> filebin_upload.py
  - echo "        files_to_upload.append(file_path)" >> filebin_upload.py
  - echo "" >> filebin_upload.py
  - echo "# Use ThreadPoolExecutor to upload files concurrently" >> filebin_upload.py
  - echo "with concurrent.futures.ThreadPoolExecutor() as executor:" >> filebin_upload.py
  - echo "    future_to_file = {executor.submit(upload_file, file): file for file in files_to_upload}" >> filebin_upload.py
  - echo "    for future in concurrent.futures.as_completed(future_to_file):" >> filebin_upload.py
  - echo "        try:" >> filebin_upload.py
  - echo "            status_code, filename, response_data = future.result()" >> filebin_upload.py
  - echo "            print(f'File: {filename}, Status Code: {status_code}, Response: {response_data}')" >> filebin_upload.py
  - echo "        except Exception as e:" >> filebin_upload.py
  - echo "            print(f'File: {future_to_file[future]} generated an exception: {e}')" >> filebin_upload.py

  - echo "Uploading files..."
  - python filebin_upload.py
