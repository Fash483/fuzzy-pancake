version: 1.0.{build}
image: Ubuntu

branches:
  only:
    - Sera

install:
  - sudo apt update
  - sudo apt install -y curl findutils python3 python3-pip
  - pip3 install requests requests_toolbelt

build_script:
  - |
    # Create directories
    mkdir -p downloads/subfolder
    
    # Run embedded Python code to download again
    python3 - <<EOF
 !pip install requests_toolbelt

import os
import requests
from requests.auth import HTTPBasicAuth
from concurrent.futures import ThreadPoolExecutor, as_completed

# WebDAV server settings
webdav_url = "https://app.koofr.net/dav/Koofr/Kaggle/"
username = "giannabutre@gmail.com"
password = "aaepqb2adm7zflpw"

# Local directory containing files to upload
local_path = "downloads"

# Make sure local directory exists
os.makedirs(local_path, exist_ok=True)

# Authenticate with the WebDAV server
auth = HTTPBasicAuth(username, password)

# List files in the local directory
files_to_upload = os.listdir(local_path)

# Define upload function
def upload_file(file_name):
    local_file_path = os.path.join(local_path, file_name)
    file_url = webdav_url + file_name

    with open(local_file_path, 'rb') as f:
        response = requests.put(file_url, data=f, auth=auth)

    if response.status_code in [200, 201, 204]:
        return f"Uploaded: {file_name}"
    else:
        return f"Failed to upload {file_name}. Status code: {response.status_code}"

# Upload concurrently using ThreadPoolExecutor
with ThreadPoolExecutor(max_workers=5) as executor:  # Adjust number of workers if needed
    futures = {executor.submit(upload_file, file): file for file in files_to_upload}

    for future in as_completed(futures):
        print(future.result())

print("All files attempted for upload.")

EOF
